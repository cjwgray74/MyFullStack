server:
  port: 9001

spring:
  application:
    name: "registration"
  main:
    banner-mode: OFF
  data:
    mongodb:
      uri: mongodb+srv://cjwgray:MQ97732laniCNG1b@cluster0.yuvdrl9.mongodb.net
      database: registration_db
  kafka:
    producer:
      bootstrap-servers: http//localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: http//localhost:9092
      group-id: "registration"
      enable-auto-commit: true
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    listener:
      missing-topics-fatal: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

info:
  app:
    name: "registration"
    description: "Employee registration"
    version: "1.0.0"